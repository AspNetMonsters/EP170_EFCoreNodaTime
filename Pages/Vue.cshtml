@page
@model EP170_EFCoreNodaTime.Pages.VueModel
@{
    ViewData["Title"] = "Vue";
}

<v-app id="app">
    <v-app-bar app dark color="primary">
        <v-toolbar-title>{{message}}</v-toolbar-title>
    </v-app-bar>
    <v-container>
        <v-main>
            <v-menu ref="menu"
                    v-model="menu"
                    :close-on-content-click="false"
                    :return-value.sync="newHoliday.displayDate"
                    transition="scale-transition"
                    offset-y
                    min-width="290px">
                <template v-slot:activator="{ on, attrs }">
                    <v-text-field v-model="newHoliday.formattedDate()"
                                  label="Holiday Date"
                                  prepend-icon="mdi-event"
                                  readonly
                                  v-bind="attrs"
                                  v-on="on"></v-text-field>
                </template>
                <v-date-picker v-model="newHoliday.displayDate" no-title scrollable>
                    <v-spacer></v-spacer>
                    <v-btn text color="primary" @@click="menu = false">Cancel</v-btn>
                    <v-btn text color="primary" @@click="$refs.menu.save(newHoliday.displayDate)">OK</v-btn>
                </v-date-picker>
            </v-menu>
            <v-text-field v-model="newHoliday.name" append-icon="mdi-send" @@click:append="addHoliday"></v-text-field>

            <v-list>
                <v-list-item v-for="item in afterToday">

                    <v-list-item-content>{{item.name}} - {{item.formattedDate()}}</v-list-item-content>
                    <v-list-item-action>
                        <v-btn icon @@click="vote(item)"></v-btn>
                    </v-list-item-action>
                </v-list-item>
            </v-list>
        </v-main>
    </v-container>
</v-app>


@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@@2.x/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@@2.x/dist/vuetify.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/luxon@@1.24.1/build/global/luxon.min.js"></script>

    <script type="text/javascript">
        class Holiday {
            constructor() {
                this.name = "";
                this.date = luxon.DateTime.local();
            }

            formattedDate() {
                return this.date ? this.date.toLocaleString() : '';
            }

            get displayDate() {
                return this.date ? this.date.toISODate() : '';
            }

            set displayDate(holidayDate) {
                this.date = luxon.DateTime.fromISO(holidayDate);
            }

 
            static fromData(data) {
                const holiday = new Holiday();
                Object.assign(holiday, data);
                holiday.date = luxon.DateTime.fromISO(data.date);
                return holiday;
            }

            toJSON() {
                return {
                    name: this.name,
                    date: this.date.toISODate()
                }
            }

 
        }


        let app = new Vue({
            el: '#app',
            vuetify: new Vuetify(),
            computed: {
                afterToday: function () {
                    const today = luxon.DateTime.local();
                    return this.holidays.filter(h => h.date >= today);
                }
            },
            created: function () {
                fetch('/api/publicholidays').then(response => {
                    if (response.ok) {
                        response.json().then(holidays => {
                            this.holidays = holidays.map(h => Holiday.fromData(h));
                        });
                    }
                });
            },
            data: {
                newHoliday: new Holiday(),
                menu: false,
                message: 'Canadian Holidays',
                holidays: []
            },
            methods: {
                addHoliday: function () {
                    fetch('/api/publicholidays', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(this.newHoliday)
                    }).then(response => {
                        if (response.ok) {
                            this.holidays.push(this.newHoliday);
                            this.newHoliday = new Holiday();
                        }
                    });
                }
            }
        });


    </script>



}

